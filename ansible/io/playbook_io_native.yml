---
- name: I/O Benchmark - Native EC2
  hosts: io_native
  become: yes

  vars:
    s3_base_path: s3://thesis-logs-dev/io
    io_variants:
      - { label: "write_1M_d1", rw: "write", bs: "1M", iodepth: 1 }
      - { label: "write_1M_d16", rw: "write", bs: "1M", iodepth: 16 }
      - { label: "read_1M_d1", rw: "read", bs: "1M", iodepth: 1 }
      - { label: "read_1M_d16", rw: "read", bs: "1M", iodepth: 16 }
      - { label: "write_4k_d1", rw: "write", bs: "4k", iodepth: 1 }
      - { label: "write_4k_d16", rw: "write", bs: "4k", iodepth: 16 }
      - { label: "read_4k_d1", rw: "read", bs: "4k", iodepth: 1 }
      - { label: "read_4k_d16", rw: "read", bs: "4k", iodepth: 16 }

  tasks:
    - name: Install fio via yum
      command: yum install -y fio

    - name: Cleanup old fio and log files before tests
      shell: rm -f /home/ec2-user/*.dat /home/ec2-user/*.log /home/ec2-user/*.fio

    - name: Execute FIO test per variant with upload and cleanup
      block:
        - name: Create fio definition file for {{ item.label }}
          copy:
            dest: "/home/ec2-user/fio_{{ item.label }}.fio"
            content: |
              [benchmark]
              name=IO Test - {{ item.label }}
              filename=seq_test_{{ item.label }}.dat
              ioengine=libaio
              direct=1
              bs={{ item.bs }}
              size=1G
              rw={{ item.rw }}
              iodepth={{ item.iodepth }}
              numjobs=1
              runtime=60
              time_based

        - name: Run fio test for {{ item.label }}
          shell: fio "/home/ec2-user/fio_{{ item.label }}.fio" > "/home/ec2-user/io_output_{{ item.label }}_native.log"

        - name: Upload fio result log to S3 for {{ item.label }}
          shell: aws s3 cp "/home/ec2-user/io_output_{{ item.label }}_native.log" "{{ s3_base_path }}/io_output_{{ item.label }}_native.log"

        - name: Remove fio log file after upload for {{ item.label }}
          file:
            path: "/home/ec2-user/io_output_{{ item.label }}_native.log"
            state: absent

        - name: Remove fio data file after test for {{ item.label }}
          file:
            path: "/home/ec2-user/seq_test_{{ item.label }}.dat"
            state: absent

        - name: Remove fio definition file after test for {{ item.label }}
          file:
            path: "/home/ec2-user/fio_{{ item.label }}.fio"
            state: absent

      loop: "{{ io_variants }}"
