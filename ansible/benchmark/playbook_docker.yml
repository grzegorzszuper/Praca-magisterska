---
- name: Uruchomienie benchmarku w Dockerze
  hosts: ec2_docker
  become: yes

  vars:
    s3_bucket_name: thesis-logs-dev  # jeśli nie masz w group_vars

  tasks:
    - name: Sprawdź ścieżkę do python3 na instancji
      command: which python3
      register: python3_path

    - name: Wyświetl ścieżkę python3
      debug:
        var: python3_path.stdout

    - name: Zainstaluj Dockera ręcznie (yum)
      command: yum install -y docker
      
    - name: Uruchom i włącz Docker
      service:
        name: docker
        state: started
        enabled: true

    - name: Dodaj ec2-user do grupy docker
      user:
        name: ec2-user
        groups: docker
        append: yes


    - name: Skopiuj pliki benchmarka do zdalnej maszyny
      copy:
        src: ../tests/
        dest: /home/ec2-user/benchmark/
        owner: ec2-user
        group: ec2-user
        mode: 0755

    - name: Buduj obraz Dockera
      command: docker build -t benchmark-image .
      args:
        chdir: /home/ec2-user/benchmark/

    - name: Zainstaluj pip
      command: yum install -y python3-pip

    - name: Utwórz alias pip → pip3
      file:
        src: /usr/bin/pip3
        dest: /usr/bin/pip
        state: link

    - name: Zainstaluj boto3 i botocore (do obsługi S3)
      pip:
        name:
          - boto3
          - botocore
    
    - name: Uruchom benchmark (size 100)
      become: yes
      command: docker run --rm benchmark-image python3 benchmark.py --size 100
      register: docker_benchmark_output_100

    - name: Zapisz wynik size 100
      copy:
        content: "{{ docker_benchmark_output_100.stdout }}"
        dest: /home/ec2-user/output_docker_100.log

    - name: Wyślij wynik size 100 do S3
      command: sudo aws s3 cp /home/ec2-user/output_docker_100.log s3://thesis-logs-dev/output_docker_100.log

    - name: Uruchom benchmark (size 500)
      command: docker run --rm benchmark-image python3 benchmark.py --size 500
      register: docker_benchmark_output_500

    - name: Zapisz wynik size 500
      copy:
        content: "{{ docker_benchmark_output_500.stdout }}"
        dest: /home/ec2-user/output_docker_500.log

    - name: Wyślij wynik size 500 do S3
      command: sudo aws s3 cp /home/ec2-user/output_docker_500.log s3://thesis-logs-dev/output_docker_500.log

    - name: Uruchom benchmark (size 1000)
      command: docker run --rm benchmark-image python3 benchmark.py --size 1000
      register: docker_benchmark_output_1000

    - name: Zapisz wynik size 1000
      copy:
        content: "{{ docker_benchmark_output_1000.stdout }}"
        dest: /home/ec2-user/output_docker_1000.log

    - name: Wyślij wynik size 1000 do S3
      command: sudo aws s3 cp /home/ec2-user/output_docker_1000.log s3://thesis-logs-dev/output_docker_1000.log

       
